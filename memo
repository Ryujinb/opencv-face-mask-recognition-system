11-27 일요일 23:34
구글 티처블 머신 이용해서 keras_model.h5라는 마스크 착용 여부 학습 모델 생성 후 추가했습니다. 
모델의 레이블은 다음과 같습니다.
0 mask
1 no mask
2 wall
총 3개의 클래스로 마스크, 마스크 미착용, 빈 벽으로 나누어 학습을 진행했습니다.
캠을 통해 인식한 결과를 화면에 출력해줍니다.
테스트 후 코멘트 남겨주세요.
(인식이 잘 이루어지지 않으면 캠에 얼굴을 가까이 가져가 보세요.)

12-14 수요일 06:54
파이어베이스 storage를 이용해 마스크 착용이 인식될 경우 사진을 캡쳐하여 storage에 업로드 하는 기능이 추가되었습니다.
그에따른 fileUpload함수와 업데이트 된 if is_mask == 0:의 내용을 집중적으로 봐주세요.
파이어베이스에 접근하기 위해서는 Admin SDK가 필요합니다. 카카오톡으로 이메일 남겨주시면 파이어베이스 프로젝트 구성원에 추가시켜드리겠습니다.
그 후 본인의 키를 발급받아 storage에 접근하세요. line15에 키의 경로, 이름을 등록하시면 됩니다. 절대로 해당 키를 깃허브에 업로드하지 마세요.
cv2.imwrite('./temp_photo/' + str(now) + ".jpg", frame)
다음과 같이 캡처화면을 저장하고, 경로를 따라 사진을 업로드합니다. 본인 프로젝트 경로에 temp_photo 폴더를 생성하시면 됩니다. 
업로드 후 스스로 파일을 삭제하도록 os.remove 함수를 사용했습니다.

12-16 금요일 11:26
마스크 착용 인식여부에 따른 동작을 50프레임 마다 한번씩 수행하도록 수정했습니다.
*마스크 착용자를 인식하고 사진을 업로드 한 뒤, 빈 벽이 나오기 전까지는 또 업로드를 하지 않습니다.
파이참과 아두이노의 시리얼 통신을 위한 pyserial 오픈소스를 새로 사용합니다.
line 90의 주석 참고하세요 
                mask = '1'
                mask = mask.encode('utf-8')
                ad.write(mask)
다음과 같이 마스크 착용시 시링얼 통신을 이용해 아두이노로 1을 전송합니다. 아두이노에서는 이 신호를 통해 led와 벨을 울리는 등 다양한 동작을 하게 됩니다.
            mask = '2'
            mask = mask.encode('utf-8')
            ad.write(mask)
미착용시 2를 전송합니다.

12-18 일요일 11:00
DB에 전송하는 태그값을 10자리로 수정했습니다.
